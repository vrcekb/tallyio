[package]
name = "strategy_core"
version = "0.1.0"
edition = "2021"
authors = ["TallyIO Team <dev@tallyio.com>"]
description = "Ultra-performance strategy execution engine for TallyIO MEV and liquidation operations"
license = "MIT"
repository = "https://github.com/tallyio/tallyio"
readme = "README.md"
keywords = ["mev", "liquidation", "arbitrage", "defi", "crypto"]
categories = ["finance", "algorithms", "concurrency"]

[lib]
name = "strategy_core"
crate-type = ["lib"]

[dependencies]
# Core dependencies
rust_decimal = { version = "1.32", default-features = false, features = ["std"] }
rust_decimal_macros = "1.32"
tokio = { version = "1.35", features = ["full", "tracing"] }
rayon = "1.8"
crossbeam = "0.8"
parking_lot = "0.12"
ahash = { version = "0.8", default-features = false, features = ["std"] }
smallvec = { version = "1.11", features = ["const_generics", "const_new"] }
tinyvec = { version = "1.6", features = ["alloc", "rustc_1_55"] }

# Error handling and logging
thiserror = "1.0"
anyhow = "1.0"
tracing = "0.1"
async-trait = "0.1"

# Crypto and blockchain
secp256k1 = { version = "0.28", features = ["rand", "recovery", "global-context"] }
k256 = { version = "0.13", features = ["ecdsa", "sha256"] }
sha3 = "0.10"
blake3 = "1.5"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = "1.3"

# Networking
reqwest = { version = "0.11", features = ["json", "rustls-tls"] }

# Performance optimizations
wide = "0.7"
bytemuck = { version = "1.14", features = ["derive"] }
aligned-vec = "0.5"

# SIMD and low-level optimizations
simd-json = "0.13"
memmap2 = "0.9"

# Machine learning for opportunity scoring (optional) - disabled due to version conflicts
# candle-core = { version = "0.3", optional = true }
# candle-nn = { version = "0.3", optional = true }

# Internal crate dependencies
hot_path = { path = "../hot_path" }

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.4"
tokio-test = "0.4"
tempfile = "3.8"

[build-dependencies]
cc = "1.0"

[features]
default = ["simd"]
simd = []
avx512 = []
ml_scoring = [] # Disabled due to candle version conflicts
benchmarks = []

# Ultra-strict clippy configuration for production-ready code
[lints.clippy]
# Core restrictions - absolutely no exceptions
unwrap_used = "deny"
expect_used = "deny"
panic = "deny"
todo = "deny"
unimplemented = "deny"
unreachable = "deny"

# Memory safety and performance
indexing_slicing = "deny"
integer_division = "deny"
arithmetic_side_effects = "deny"
float_arithmetic = "deny"
modulo_arithmetic = "deny"
lossy_float_literal = "deny"
cast_possible_truncation = "deny"
cast_precision_loss = "deny"
cast_sign_loss = "deny"
cast_possible_wrap = "deny"
cast_lossless = "deny"
mem_forget = "deny"

# Concurrency safety
rc_mutex = "deny"
await_holding_lock = "deny"
await_holding_refcell_ref = "deny"

# Code quality
let_underscore_must_use = "deny"
let_underscore_untyped = "deny"
must_use_candidate = "deny"
missing_asserts_for_indexing = "deny"
panic_in_result_fn = "deny"
string_slice = "deny"
str_to_string = "deny"
verbose_file_reads = "deny"
manual_ok_or = "deny"

# Safety documentation
unnecessary_safety_comment = "deny"
unnecessary_safety_doc = "deny"
undocumented_unsafe_blocks = "deny"

# API design
impl_trait_in_params = "deny"
clone_on_ref_ptr = "deny"
manual_let_else = "deny"
unseparated_literal_suffix = "deny"

# Allowed exceptions for practical development
missing_docs_in_private_items = "allow"
module_name_repetitions = "allow"
missing_trait_methods = "allow"
wildcard_imports = "allow"
redundant_pub_crate = "allow"
blanket_clippy_restriction_lints = "allow"
mod_module_files = "allow"  # Enterprise architecture requires mod.rs files

[lints.rust]
warnings = "deny"
unsafe_code = "warn"  # Allow unsafe for performance-critical sections with documentation

# Profile optimizations for AMD EPYC 9454P
[profile.release]
lto = "fat"
codegen-units = 1
panic = "abort"
opt-level = 3
debug = false
strip = true
overflow-checks = false

[profile.release.package."*"]
opt-level = 3

# Development profile with some optimizations for faster testing
[profile.dev]
opt-level = 1
debug = true
overflow-checks = true

# Benchmark profile
[profile.bench]
inherits = "release"
debug = true
